//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace studentsDB
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EFDbContextEntities : DbContext
    {
        public EFDbContextEntities()
            : base("name=EFDbContextEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public virtual DbSet<Books> Books { get; set; }
        public virtual DbSet<students> students { get; set; }
    
        public virtual int addORedit(string mode, Nullable<int> bookId, string name, string author, string отчество, string description, string дата_рождения, string год_поступления, string год_окончания, string образование, string год_окончания_школы, string номер_школы, string genre, string year, string picture, string номер_телефона_родителей, string url, string dimensions, string weight, string гражданство, string документ_подтверждающий_гражданство, string многодетная_семья, string barcode, string срок_действия, string основание_поощрение, string основание_взыскания, string media, string от_какого_числа, string внутриние_перемещения, string характеристика_выпускника, string трудоустройство_выпускника, string продвижение_выпускника, Nullable<int> price)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var bookIdParameter = bookId.HasValue ?
                new ObjectParameter("BookId", bookId) :
                new ObjectParameter("BookId", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var authorParameter = author != null ?
                new ObjectParameter("author", author) :
                new ObjectParameter("author", typeof(string));
    
            var отчествоParameter = отчество != null ?
                new ObjectParameter("Отчество", отчество) :
                new ObjectParameter("Отчество", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var дата_рожденияParameter = дата_рождения != null ?
                new ObjectParameter("Дата_рождения", дата_рождения) :
                new ObjectParameter("Дата_рождения", typeof(string));
    
            var год_поступленияParameter = год_поступления != null ?
                new ObjectParameter("Год_поступления", год_поступления) :
                new ObjectParameter("Год_поступления", typeof(string));
    
            var год_окончанияParameter = год_окончания != null ?
                new ObjectParameter("Год_окончания", год_окончания) :
                new ObjectParameter("Год_окончания", typeof(string));
    
            var образованиеParameter = образование != null ?
                new ObjectParameter("Образование", образование) :
                new ObjectParameter("Образование", typeof(string));
    
            var год_окончания_школыParameter = год_окончания_школы != null ?
                new ObjectParameter("Год_окончания_школы", год_окончания_школы) :
                new ObjectParameter("Год_окончания_школы", typeof(string));
    
            var номер_школыParameter = номер_школы != null ?
                new ObjectParameter("Номер_школы", номер_школы) :
                new ObjectParameter("Номер_школы", typeof(string));
    
            var genreParameter = genre != null ?
                new ObjectParameter("genre", genre) :
                new ObjectParameter("genre", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(string));
    
            var pictureParameter = picture != null ?
                new ObjectParameter("picture", picture) :
                new ObjectParameter("picture", typeof(string));
    
            var номер_телефона_родителейParameter = номер_телефона_родителей != null ?
                new ObjectParameter("Номер_телефона_родителей", номер_телефона_родителей) :
                new ObjectParameter("Номер_телефона_родителей", typeof(string));
    
            var urlParameter = url != null ?
                new ObjectParameter("url", url) :
                new ObjectParameter("url", typeof(string));
    
            var dimensionsParameter = dimensions != null ?
                new ObjectParameter("dimensions", dimensions) :
                new ObjectParameter("dimensions", typeof(string));
    
            var weightParameter = weight != null ?
                new ObjectParameter("weight", weight) :
                new ObjectParameter("weight", typeof(string));
    
            var гражданствоParameter = гражданство != null ?
                new ObjectParameter("Гражданство", гражданство) :
                new ObjectParameter("Гражданство", typeof(string));
    
            var документ_подтверждающий_гражданствоParameter = документ_подтверждающий_гражданство != null ?
                new ObjectParameter("Документ_подтверждающий_гражданство", документ_подтверждающий_гражданство) :
                new ObjectParameter("Документ_подтверждающий_гражданство", typeof(string));
    
            var многодетная_семьяParameter = многодетная_семья != null ?
                new ObjectParameter("Многодетная_семья", многодетная_семья) :
                new ObjectParameter("Многодетная_семья", typeof(string));
    
            var barcodeParameter = barcode != null ?
                new ObjectParameter("barcode", barcode) :
                new ObjectParameter("barcode", typeof(string));
    
            var срок_действияParameter = срок_действия != null ?
                new ObjectParameter("Срок_действия", срок_действия) :
                new ObjectParameter("Срок_действия", typeof(string));
    
            var основание_поощрениеParameter = основание_поощрение != null ?
                new ObjectParameter("Основание_поощрение", основание_поощрение) :
                new ObjectParameter("Основание_поощрение", typeof(string));
    
            var основание_взысканияParameter = основание_взыскания != null ?
                new ObjectParameter("Основание_взыскания", основание_взыскания) :
                new ObjectParameter("Основание_взыскания", typeof(string));
    
            var mediaParameter = media != null ?
                new ObjectParameter("media", media) :
                new ObjectParameter("media", typeof(string));
    
            var от_какого_числаParameter = от_какого_числа != null ?
                new ObjectParameter("От_какого_числа", от_какого_числа) :
                new ObjectParameter("От_какого_числа", typeof(string));
    
            var внутриние_перемещенияParameter = внутриние_перемещения != null ?
                new ObjectParameter("Внутриние_перемещения", внутриние_перемещения) :
                new ObjectParameter("Внутриние_перемещения", typeof(string));
    
            var характеристика_выпускникаParameter = характеристика_выпускника != null ?
                new ObjectParameter("Характеристика_выпускника", характеристика_выпускника) :
                new ObjectParameter("Характеристика_выпускника", typeof(string));
    
            var трудоустройство_выпускникаParameter = трудоустройство_выпускника != null ?
                new ObjectParameter("Трудоустройство_выпускника", трудоустройство_выпускника) :
                new ObjectParameter("Трудоустройство_выпускника", typeof(string));
    
            var продвижение_выпускникаParameter = продвижение_выпускника != null ?
                new ObjectParameter("Продвижение_выпускника", продвижение_выпускника) :
                new ObjectParameter("Продвижение_выпускника", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addORedit", modeParameter, bookIdParameter, nameParameter, authorParameter, отчествоParameter, descriptionParameter, дата_рожденияParameter, год_поступленияParameter, год_окончанияParameter, образованиеParameter, год_окончания_школыParameter, номер_школыParameter, genreParameter, yearParameter, pictureParameter, номер_телефона_родителейParameter, urlParameter, dimensionsParameter, weightParameter, гражданствоParameter, документ_подтверждающий_гражданствоParameter, многодетная_семьяParameter, barcodeParameter, срок_действияParameter, основание_поощрениеParameter, основание_взысканияParameter, mediaParameter, от_какого_числаParameter, внутриние_перемещенияParameter, характеристика_выпускникаParameter, трудоустройство_выпускникаParameter, продвижение_выпускникаParameter, priceParameter);
        }
    
        public virtual int DeleteProcedure(Nullable<int> bookId)
        {
            var bookIdParameter = bookId.HasValue ?
                new ObjectParameter("BookId", bookId) :
                new ObjectParameter("BookId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteProcedure", bookIdParameter);
        }
    
        public virtual ObjectResult<ViewOrSearch_Result> ViewOrSearch(string lil)
        {
            var lilParameter = lil != null ?
                new ObjectParameter("lil", lil) :
                new ObjectParameter("lil", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ViewOrSearch_Result>("ViewOrSearch", lilParameter);
        }
    }
}
